(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{380:function(t,s,a){"use strict";a.r(s);var n=a(25),v=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"dom"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dom"}},[t._v("#")]),t._v(" DOM")]),t._v(" "),a("h2",{attrs:{id:"盒子模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#盒子模型"}},[t._v("#")]),t._v(" 盒子模型")]),t._v(" "),a("p",[t._v("每个HTML元素都是长方形盒子。")]),t._v(" "),a("p",[t._v("盒子模型有两种："),a("strong",[t._v("IE盒子模型")]),t._v("、"),a("strong",[t._v("标准W3C盒子模型")])]),t._v(" "),a("p",[t._v("IE的content部分包含了border和pading")]),t._v(" "),a("p",[t._v("标准W3C盒模型包含：内容(content)、填充(padding)、边界(margin)、边框(border)。")]),t._v(" "),a("h2",{attrs:{id:"position"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#position"}},[t._v("#")]),t._v(" Position")]),t._v(" "),a("p",[a("strong",[t._v("相对定位元素")]),t._v("： relative")]),t._v(" "),a("p",[a("strong",[t._v("绝对定位元素")]),t._v("： abloute，相对于非static的元素的位置")]),t._v(" "),a("p",[a("strong",[t._v("固定定位元素")]),t._v("： fixed 固定于body的位置")]),t._v(" "),a("p",[a("strong",[t._v("粘性定位元素")]),t._v("： 是相对定位和固定定位的混合。元素在跨越某一阈值之前为相对定位，在跨越某一阈值之后，为固定定位。常用于定位==字母列表的头部元素==。标示 B 部分开始的头部元素在滚动 A 部分时，始终处于 A 的下方。而在开始滚动 B 部分时，B 的头部会固定在屏幕顶部，直到所有 B 的项均完成滚动后，才被 C 的头部替代。")]),t._v(" "),a("h2",{attrs:{id:"margin穿透怎么解决"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#margin穿透怎么解决"}},[t._v("#")]),t._v(" margin穿透怎么解决")]),t._v(" "),a("blockquote",[a("p",[t._v("父级设置")])]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" inline-block"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" table"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("overflow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" auto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("overflow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hidden"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("padding")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0.1px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("border")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1px solid #000000"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"行内元素-块状元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#行内元素-块状元素"}},[t._v("#")]),t._v(" 行内元素/块状元素")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("块级元素：div,p,h1,form,ul,li;")]),t._v(" "),a("p",[t._v("每一个块状元素占据单独的一块，他们的display属性默认是block的。")])]),t._v(" "),a("li",[a("p",[t._v("行内元素 : span>,a,label,input,img,strong,em;")]),t._v(" "),a("p",[t._v("占据一行，默认是inline。")])])]),t._v(" "),a("h3",{attrs:{id:"深入理解vertical-align"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#深入理解vertical-align"}},[t._v("#")]),t._v(" 深入理解vertical-align")]),t._v(" "),a("p",[t._v("https://juejin.im/post/5a7d6b886fb9a06349129463")]),t._v(" "),a("p",[t._v("初学者使用"),a("code",[t._v("vertical-align")]),t._v("属性时，经常会发现最终的表现结果并不能如愿，“vertical-align无效”也是CSS问题里搜索频率比较高的一个。大部分是因为对于该属性理解不够透彻引起的，只有理解了该属性的特点，表现行为以及与其他属性（"),a("code",[t._v("如line-height")]),t._v("）的共同作用机制和效果，才能很好的解决vertical-align带来的一些问题，并有效的利用它。")]),t._v(" "),a("ol",[a("li",[a("p",[a("strong",[t._v("起作用的前提")])]),t._v(" "),a("p",[t._v("vertical-align起作用的前提是元素为inline水平元素或table-cell元素，包括"),a("code",[t._v("span")]),t._v(", "),a("code",[t._v("img")]),t._v(","),a("code",[t._v("input")]),t._v(", "),a("code",[t._v("button")]),t._v(", "),a("code",[t._v("td")]),t._v(" 以及通过display改变了显示水平为inline水平或者table-cell的元素。这也意味着，默认情况下，"),a("code",[t._v("div")]),t._v(", "),a("code",[t._v("p")]),t._v("等元素设置vertical-align无效。")])])]),t._v(" "),a("h2",{attrs:{id:"重绘回流"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重绘回流"}},[t._v("#")]),t._v(" 重绘回流")]),t._v(" "),a("p",[a("strong",[t._v("浏览器的渲染流程：")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("解析html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("形成"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOM")]),t._v("树；\n解析css"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("形成"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CSSOM")]),t._v("树；\n两者结合，形成render树；\n进行layout，得到需要展示的元素，并且得到他们的大小和位置；\n根据render树和layout信息，进行paninting，得到元素的像素大小，绘制在屏幕上。\n")])])]),a("p",[a("strong",[t._v("什么是回流 （reflow）?")])]),t._v(" "),a("p",[t._v("回流其实就是指重新计算layout。")]),t._v(" "),a("p",[a("strong",[t._v("什么是重绘（repaint）?")])]),t._v(" "),a("p",[t._v("重绘其实就是浏览器根据render树以及回流阶段重新得到的layout信息，进行像素的绘制。")]),t._v(" "),a("p",[a("strong",[t._v("什么时候会发生回流？")])]),t._v(" "),a("p",[t._v("当页面发生布局变化，或者几何信息发生变化的时候，就会产生回流。")]),t._v(" "),a("p",[t._v("比如：")]),t._v(" "),a("ul",[a("li",[t._v("dom的增加删除")]),t._v(" "),a("li",[t._v("元素的position发生改变")]),t._v(" "),a("li",[t._v("元素的大小发生改变（包括margin、padding、border、height、width等）")]),t._v(" "),a("li",[t._v("内容发生变化（其实也是导致元素大小产生变化）")]),t._v(" "),a("li",[t._v("浏览器窗口大小发生变化")])]),t._v(" "),a("p",[a("strong",[t._v("怎么避免发生回流？")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("当需要对元素进行修改时，让元素脱离文档流。因为脱离文档流的元素， 不会引起回流；对其进行多次修改后，再将其加入文档流。")])]),t._v(" "),a("li",[a("p",[t._v("尽量合并对样式的操作，减少回流的发生次数。比如，修改某一个元素的样式时，不要一个个去执行。")])]),t._v(" "),a("li",[a("p",[t._v("避免触发同步布局事件。比如去读取元素的offsetWidth属性，会导致浏览器强制清空执行队列，引发回流重绘。")]),t._v(" "),a("p",[t._v("需要控制元素显示隐藏时，用z-index、transform属性来替代display的属性。避免回流。")])])]),t._v(" "),a("h2",{attrs:{id:"居中"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#居中"}},[t._v("#")]),t._v(" 居中")]),t._v(" "),a("blockquote",[a("p",[t._v("垂直居中的几种实现方式")])]),t._v(" "),a("ol",[a("li",[t._v("子元素position设置absolute，margin设置为auto, left和right设置为0； 需要设置width、height")]),t._v(" "),a("li",[t._v("父级设置"),a("code",[t._v("text-align: center")]),t._v("，"),a("code",[t._v("line-height")]),t._v("等同高度。 对inline元素有效")]),t._v(" "),a("li",[t._v("子元素position设置为absolute，top:50%，left:50%，transform: translate(-50%, -50%);")]),t._v(" "),a("li",[t._v("父元素设置table布局，子元素设置display：table-cell; vertical-align: middle;")]),t._v(" "),a("li",[t._v("父元素设置flex布局，设置justify-content: center,  align-items:center;")]),t._v(" "),a("li",[t._v("父元素设置grid布局，子元素设置 justify-self: center, align-self: center;")])]),t._v(" "),a("h2",{attrs:{id:"块状格式上下文-bfc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#块状格式上下文-bfc"}},[t._v("#")]),t._v(" 块状格式上下文(BFC)")]),t._v(" "),a("p",[t._v("BFC全称”Block Formatting Context”, 中文为“块级格式化上下文”。")]),t._v(" "),a("p",[t._v("BFC元素特性表现原则就是，内部子元素再怎么翻江倒海，翻云覆雨都不会影响外部的元素")]),t._v(" "),a("h3",{attrs:{id:"怎么开启bfc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#怎么开启bfc"}},[t._v("#")]),t._v(" 怎么开启bfc")]),t._v(" "),a("p",[t._v("设置float，不为none；")]),t._v(" "),a("p",[t._v("设置position = absolute 或者 fixed")]),t._v(" "),a("p",[t._v("设置overflow = auto  或者 scroll 或者 hidden")]),t._v(" "),a("p",[t._v("设置display = "),a("code",[t._v("table-cell")]),t._v(", "),a("code",[t._v("table-caption")]),t._v(", "),a("code",[t._v("inline-block")]),t._v("中的任何一个")]),t._v(" "),a("h3",{attrs:{id:"高度塌陷问题如何解决？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#高度塌陷问题如何解决？"}},[t._v("#")]),t._v(" 高度塌陷问题如何解决？")]),t._v(" "),a("p",[t._v("子元素脱离文档流如果是float，则可以通过"),a("a",{attrs:{href:""}},[t._v("开启bfc")]),t._v("解决。")]),t._v(" "),a("p",[t._v("但是如果是absolute或者fixed，则开启BFC同样不管用。只能通过指定parent的高度来避免高度丢失。（通常是要用js来计算高度）")]),t._v(" "),a("p",[t._v("所以尽量避免用absolute来布局。")]),t._v(" "),a("p",[t._v("absolute定位的元素，他的宽度如果是100%的话，"),a("code",[t._v("width = 第一个非static祖先节点的宽度 + padding")])]),t._v(" "),a("h2",{attrs:{id:"层叠上下文-stacking-context"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#层叠上下文-stacking-context"}},[t._v("#")]),t._v(" 层叠上下文(Stacking Context)")]),t._v(" "),a("p",[a("strong",[t._v("层叠上下文（stacking context）")])]),t._v(" "),a("p",[t._v("层叠上下文由满足以下任意一个条件的元素形成。")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("根层叠上下文")]),t._v("\n指的是页面根元素，也就是滚动条的默认的始作俑者``元素。这就是为什么，绝对定位元素在"),a("code",[t._v("left")]),t._v("/"),a("code",[t._v("top")]),t._v("等值定位的时候，如果没有其他定位元素限制，会相对浏览器窗口定位的原因。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("定位元素与传统层叠上下文")])]),t._v(" "),a("p",[t._v("对于positiion:relative/positiion:absolute的定位元素，当z-index值不为auto的时候，会创建层叠上下文。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("CSS3与新时代的层叠上下文")])]),t._v(" "),a("ol",[a("li",[a("code",[t._v("z-index")]),t._v("值不为"),a("code",[t._v("auto")]),t._v("的"),a("code",[t._v("flex")]),t._v("项(父元素"),a("code",[t._v("display:flex|inline-flex")]),t._v(")，子元素才是层叠上下文")]),t._v(" "),a("li",[t._v("元素的"),a("code",[t._v("opacity")]),t._v("值不是"),a("code",[t._v("1")]),t._v(".")])])])]),t._v(" "),a("p",[a("strong",[t._v("层叠水平（stacking level）")])]),t._v(" "),a("p",[t._v("普通元素的层叠水平由层叠上下文决定。只有同一个"),a("code",[t._v("层叠上下文")]),t._v("的元素，比较"),a("code",[t._v("层叠level")]),t._v("才有意义。")]),t._v(" "),a("p",[t._v("不要将z-index和层叠上下文混为一谈。")]),t._v(" "),a("p",[t._v("z-index某种程度上会影响层叠上下文")]),t._v(" "),a("p",[t._v("z-index只在position:absolute 的情况下有作用，以及在flex的容器的子元素下才有作用。")]),t._v(" "),a("p",[t._v("但层叠水平每一个层叠上下文的元素都有。")]),t._v(" "),a("p",[a("strong",[t._v("层叠顺序（stacking order）")])]),t._v(" "),a("p",[t._v("元素发生层叠时，垂直方向（z轴）的排列顺序。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://ipic-coda.oss-cn-beijing.aliyuncs.com/2020-03-09-133558.png",alt:"层叠顺序元素的标注说明"}})]),t._v(" "),a("p",[t._v("层叠准则：")]),t._v(" "),a("p",[t._v("当有明显的"),a("code",[t._v("层叠水平")]),t._v("标准的时候，比如z-index。那么谁大，谁优先；")]),t._v(" "),a("p",[t._v("当元素的层叠顺序一致，且层叠上下文相同的时候，DOM中，后面的元素比前面的元素")]),t._v(" "),a("h2",{attrs:{id:"sass-less"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sass-less"}},[t._v("#")]),t._v(" Sass/Less")]),t._v(" "),a("p",[t._v("预编译")]),t._v(" "),a("h2",{attrs:{id:"html5有哪些新特性、移除了那些元素？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#html5有哪些新特性、移除了那些元素？"}},[t._v("#")]),t._v(" html5有哪些新特性、移除了那些元素？")]),t._v(" "),a("p",[t._v("HTML5 现在已经不是 SGML 的子集，主要是关于图像，位置，存储，多任务等功能的增加。")]),t._v(" "),a("ul",[a("li",[t._v("绘画 canvas")]),t._v(" "),a("li",[t._v("用于媒介回放的 video 和 audio 元素")]),t._v(" "),a("li",[t._v("本地离线存储 localStorage 长期存储数据，浏览器关闭后数据不丢失；")]),t._v(" "),a("li",[t._v("sessionStorage 的数据在浏览器关闭后自动删除")]),t._v(" "),a("li",[t._v("语意化更好的内容元素，比如 article、footer、header、nav、section")]),t._v(" "),a("li",[t._v("表单控件，calendar、date、time、email、url、search")]),t._v(" "),a("li",[t._v("新的技术==webworker==, == websockt==,  Geolocation")])]),t._v(" "),a("p",[t._v("移除的元素")]),t._v(" "),a("ul",[a("li",[t._v("纯表现的元素：basefont，big，center，font, s，strike，tt，u；")]),t._v(" "),a("li",[t._v("对可用性产生负面影响的元素：frame，frameset，noframes；")])]),t._v(" "),a("p",[t._v("支持HTML5新标签：")]),t._v(" "),a("ul",[a("li",[t._v("IE8/IE7/IE6支持通过document.createElement方法产生的标签，")]),t._v(" "),a("li",[t._v("可以利用这一特性让这些浏览器支持HTML5新标签，")]),t._v(" "),a("li",[t._v("浏览器支持新标签后，还需要添加标签默认的样式：")])]),t._v(" "),a("h2",{attrs:{id:"css的权重以及优先级算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css的权重以及优先级算法"}},[t._v("#")]),t._v(" CSS的权重以及优先级算法")]),t._v(" "),a("p",[t._v("设置节点样式的方式有很多种，不同的方式它们的权重并不相同，当它们给一个节点设置同一个样式时，谁的权重高谁就生效。")]),t._v(" "),a("p",[a("code",[t._v("important")]),t._v("：无限高")]),t._v(" "),a("p",[a("code",[t._v("行内样式")]),t._v("：权重值为"),a("code",[t._v("1000")])]),t._v(" "),a("p",[a("code",[t._v("id选择器")]),t._v("：权重值为"),a("code",[t._v("100")])]),t._v(" "),a("p",[a("code",[t._v("类、伪类、属性选择器")]),t._v("：权重值为"),a("code",[t._v("10")])]),t._v(" "),a("p",[a("code",[t._v("元素、伪元素")]),t._v("：权重值为"),a("code",[t._v("1")])]),t._v(" "),a("p",[t._v("通配符（*）： 0")]),t._v(" "),a("p",[t._v("LVHA原则（:link、:visited、:hover、:actived） 设置a标签的伪类时，经常安这个顺序定义。")]),t._v(" "),a("h2",{attrs:{id:"link和-import的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#link和-import的区别"}},[t._v("#")]),t._v(" link和@import的区别")]),t._v(" "),a("ul",[a("li",[t._v("所属关系的区别")])]),t._v(" "),a("p",[t._v("link是html的语法，@import是css2.1的语法")]),t._v(" "),a("ul",[a("li",[t._v("加载顺序区别")])]),t._v(" "),a("p",[t._v("link会在加载页面时被加载，@import的css在页面加载完才被加载")]),t._v(" "),a("ul",[a("li",[t._v("兼容性区别")])]),t._v(" "),a("p",[t._v("@import是 CSS2.1 才有的语法，故只可在 IE5+ 才能识别；link标签作为 HTML 元素，不存在兼容性问题。")]),t._v(" "),a("ul",[a("li",[t._v("link可以通过js来操作插入，@import不行")])]),t._v(" "),a("h2",{attrs:{id:"哪些属性可以继承？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#哪些属性可以继承？"}},[t._v("#")]),t._v(" 哪些属性可以继承？")]),t._v(" "),a("p",[t._v("字体相关： color、font-size、font-family、font-weight、line-height；")]),t._v(" "),a("p",[t._v("文本相关：text-spacing、text-align、text-indent、word-spacing；")]),t._v(" "),a("p",[t._v("列表相关：list-style")]),t._v(" "),a("p",[t._v("元素可见性:  visibility")]),t._v(" "),a("h2",{attrs:{id:"css3新增伪类有哪些"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css3新增伪类有哪些"}},[t._v("#")]),t._v(" CSS3新增伪类有哪些?")]),t._v(" "),a("p",[t._v("https://blog.csdn.net/qq_41696819/article/details/81531494")]),t._v(" "),a("h2",{attrs:{id:"before-和-after中双冒号和单冒号有什么区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#before-和-after中双冒号和单冒号有什么区别"}},[t._v("#")]),t._v(" ::before 和 :after中双冒号和单冒号有什么区别?")]),t._v(" "),a("p",[t._v("单冒号(😃 用于CSS3伪类")]),t._v(" "),a("p",[t._v("双冒号(:😃 用于CSS3伪元素。")]),t._v(" "),a("p",[t._v("伪元素由"),a("code",[t._v("双冒号")]),t._v("和"),a("code",[t._v("伪元素名称")]),t._v("组成。双冒号是在css3规范中引入的，用于区分伪类和伪元素。")]),t._v(" "),a("p",[t._v("但是伪类兼容现存样式，浏览器需要同时支持旧的伪类，比如"),a("code",[t._v(":first-line")]),t._v("、"),a("code",[t._v(":first-letter")]),t._v("、"),a("code",[t._v(":before")]),t._v("、"),a("code",[t._v(":after")]),t._v("等。")]),t._v(" "),a("p",[t._v("新的伪元素不支持用单引号，但对于CSS2之前已有的伪元素，比如:before，单冒号和双冒号的写法::before作用是一样的。")]),t._v(" "),a("h2",{attrs:{id:"用纯-css-创建一个三角形的原理是什么？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用纯-css-创建一个三角形的原理是什么？"}},[t._v("#")]),t._v(" "),a("strong",[t._v("用纯 CSS 创建一个三角形的原理是什么？")])]),t._v(" "),a("p",[t._v("把上、左、右三条边隐藏掉（颜色设为 transparent）")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[t._v(" "),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("#demo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n   "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("border-width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 20px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("border-style")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" solid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("border-color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" transparent transparent red transparent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"css隐藏元素的几种方法（至少说出三种"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css隐藏元素的几种方法（至少说出三种"}},[t._v("#")]),t._v(" CSS隐藏元素的几种方法（至少说出三种)")]),t._v(" "),a("ul",[a("li",[t._v("Opacity:元素本身依然占据它自己的位置并对网页的布局起作用。它也将响应用户交互;")]),t._v(" "),a("li",[t._v("Visibility:与 opacity 唯一不同的是它不会响应任何用户交互。此外，元素在读屏软件中也会被隐藏;")]),t._v(" "),a("li",[t._v("Display:display 设为 none 任何对该元素直接打用户交互操作都不可能生效。此外，读屏软件也不会读到元素的内容。这种方式产生的效果就像元素完全不存在;")])]),t._v(" "),a("h2",{attrs:{id:"css动画的实现方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css动画的实现方式"}},[t._v("#")]),t._v(" css动画的实现方式")]),t._v(" "),a("p",[t._v("第一种、使用transition过度属性，来实现补间动画。")]),t._v(" "),a("p",[t._v("举个例子：有一个"),a("code",[t._v("div")]),t._v("，默认"),a("code",[t._v("display")]),t._v("为"),a("code",[t._v("none")]),t._v("，也就是不显示；我们设置"),a("code",[t._v("transition-property")]),t._v("为"),a("code",[t._v("display")]),t._v("，"),a("code",[t._v("transition-duration")]),t._v("为2s。")]),t._v(" "),a("p",[t._v("但仅仅有这一个属性是没用的，因为还需要指定补间动画结束时的状态。")]),t._v(" "),a("p",[t._v("这里我们指定"),a("code",[t._v("div.on")]),t._v("变成"),a("code",[t._v("display:block")]),t._v("的状态。")]),t._v(" "),a("p",[t._v("这样，当"),a("code",[t._v("div")]),t._v("加上"),a("code",[t._v("on")]),t._v("这个类名的时候，就会出现从无到有的一个动画效果。")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'none'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("transition")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'display 2s'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("div.on")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'block'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("transistion属性是以下几个属性的简写")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[t._v("transition-property\t\ntransition-duration\ntransition-timing-function\t#ease\ntransition-deplay\n")])])]),a("p",[t._v("第二种、使用animation + keyframes来设置动画")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("breathingLamp_bg"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  animation"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$lightCircle infinite 1.2s"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@keyframes lightCircle"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0%"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      transform"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"scale(0.6)"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"50%"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      transform"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"scale(0.9)"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"100%"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      transform"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"scale(0.6)"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=v.exports}}]);