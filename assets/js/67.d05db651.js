(window.webpackJsonp=window.webpackJsonp||[]).push([[67],{424:function(s,t,a){"use strict";a.r(t);var e=a(25),r=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"nginx配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nginx配置"}},[s._v("#")]),s._v(" Nginx配置")]),s._v(" "),a("h2",{attrs:{id:"踩坑1：mac配置后403"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#踩坑1：mac配置后403"}},[s._v("#")]),s._v(" 踩坑1：mac配置后403")]),s._v(" "),a("blockquote",[a("p",[s._v("brew安装目录：/usr/local/Cellar/nginx/1.15.10")])]),s._v(" "),a("blockquote",[a("p",[s._v("产生背景")])]),s._v(" "),a("p",[s._v("mac配置完nginx后，明明路径都是正确的，但是还是无法打开页面，日志报403错误；")]),s._v(" "),a("blockquote",[a("p",[s._v("问题现象")])]),s._v(" "),a("div",{staticClass:"language-verilog extra-class"},[a("pre",{pre:!0,attrs:{class:"language-verilog"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2019")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("24")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("21")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("24")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("34")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("error"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("80457")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("#0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("open")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/Users/keyang/Workspace/temp/build/manifest.json"')]),s._v(" failed "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Permission denied"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" client"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" server"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" www"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("asproex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("com\n")])])]),a("blockquote",[a("p",[s._v("问题原因")])]),s._v(" "),a("p",[s._v("没有权限，但是没有权限的原因有很多：")]),s._v(" "),a("p",[s._v("可能是nginx启动用户不对；")]),s._v(" "),a("p",[s._v("也可能是用户无法访问目录，需要配置权限 777；")]),s._v(" "),a("blockquote",[a("p",[s._v("问题解决")])]),s._v(" "),a("p",[s._v("我这里解决方案就是去设置了777的目录权限（包括根目录）；")]),s._v(" "),a("p",[s._v("比如我访问的目录是："),a("code",[s._v("/Users/keyang/Workspace/temp/build")])]),s._v(" "),a("p",[s._v("那么需要"),a("code",[s._v("drwxrwxrwx 5 keyang staff 160B 12 24 21:56 temp")]),s._v("这个目录就开始配置权限；")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" chomd "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("777")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("/Users/keyang/Workspace/temp/build"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("\n")])])]),a("blockquote",[a("p",[s._v("另一种思路")])]),s._v(" "),a("p",[s._v("还有一种解决方案是设置user为启动用户")]),s._v(" "),a("p",[s._v("先查看nginx的启动用户 "),a("code",[s._v("ps aux | grep nginx")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://ipic-coda.oss-cn-beijing.aliyuncs.com/2020-02-14-090852.png",alt:"image-20200214170852232"}})]),s._v(" "),a("p",[s._v("然后设置nginx的配置里user对象和master一致")]),s._v(" "),a("div",{staticClass:"language-diff extra-class"},[a("pre",{pre:!0,attrs:{class:"language-diff"}},[a("code",[a("span",{pre:!0,attrs:{class:"token deleted-sign deleted"}},[s._v("- #user nobody;\n")]),a("span",{pre:!0,attrs:{class:"token inserted-sign inserted"}},[s._v("+ user root owner;\n")])])])]),a("h2",{attrs:{id:"踩坑2：保留nginx目录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#踩坑2：保留nginx目录"}},[s._v("#")]),s._v(" 踩坑2：保留nginx目录")]),s._v(" "),a("p",[s._v("如果有多级路径的话，文件目录也要有多级；")]),s._v(" "),a("p",[s._v("比如我想把浏览器路径配置为："),a("code",[s._v("http://xxx.domain.com/activity/ieo")])]),s._v(" "),a("p",[s._v("nginx配置需要是：")]),s._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("location")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("^")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("~")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("activity"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("ieo "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("root")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("Users"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("keyang"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("Workspace"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("temp"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("build"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" 然后build这个目录里面还需要有子目录，最终的结构是：\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("Users"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("keyang"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("Workspace"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("temp"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("build"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("activity"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("ieo\n            \n")])])]),a("h2",{attrs:{id:"踩坑3：goddy-ssl证书从购买到配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#踩坑3：goddy-ssl证书从购买到配置"}},[s._v("#")]),s._v(" 踩坑3：goddy ssl证书从购买到配置")]),s._v(" "),a("p",[s._v("公司的客户的网站证书都是从goddy上买的，然后部署到国外服务器。")]),s._v(" "),a("p",[s._v("由于菜的抠脚，记录以下证书的创建的过程；主要还是参考以下链接："),a("a",{attrs:{href:"https://blog.csdn.net/weixin_38109191/article/details/98479353",target:"_blank",rel:"noopener noreferrer"}},[s._v("域名网站 SSL Nginx证书配置"),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("步骤在博主的博客里记录的很清楚，就不再复制黏贴了。主要是几个点：")]),s._v(" "),a("ol",[a("li",[s._v("nginx配置需要的私钥，==并不是从goddy上下载的，而是一开始通过ssl命令生成的==。")]),s._v(" "),a("li",[s._v("也就是说，ssl证书需要先在本地创建一个私钥，然后再生成一个csr文件。最后通过csr文件来生成ssl证书。")]),s._v(" "),a("li",[s._v("创建私钥的命令有两种：")])]),s._v(" "),a("p",[s._v("第一种：这种可以一次性搞定；")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("openssl req -new -newkey rsa:2048 -nodes -keyout 您的域名.key -out 您的域名.csr\n")])])]),a("p",[s._v("第二种：这种就是两步，第一步创建一个key，第二步拿上面的key创建csr；")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("openssl genrsa -des3 -out "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("name of your certificate"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(".key "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2048")]),s._v("\nopenssl req -new -key "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("nZame of your certificate"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(".key -out "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("name of your certificate"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(".csr\n")])])]),a("ol",{attrs:{start:"4"}},[a("li",[s._v("生成crt证书")])]),s._v(" "),a("p",[s._v("你把下载的东西解压，会发现一个随机数.crt，一个随机数.pem。这个两个的文件是一样的，再一个gd_开头的.crt的文件。只要2个.crt的文件就好了。通过命令合并成一个文件。")]),s._v(" "),a("div",{staticClass:"language-cmd extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("cat f84e19a2f44c6386.crt gd_bundle-g2-g1.crt >> coolexample.crt\n")])])]),a("ol",{attrs:{start:"5"}},[a("li",[s._v(".再去NGINX的配置文件中配置就好了。这个时候有最开始生成的.key文件（私钥）和一个合并之后.crt文件（证书）")])]),s._v(" "),a("h2",{attrs:{id:"_4：-resolver的含义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4：-resolver的含义"}},[s._v("#")]),s._v(" 4： resolver的含义")]),s._v(" "),a("p",[s._v("背景：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://ipic-coda.oss-cn-beijing.aliyuncs.com/2020-04-20-062918.png",alt:"image-20191231153141975"}})]),s._v(" "),a("p",[s._v("给客户搭建的前端服务里，看见了一个resolver的配置。")]),s._v(" "),a("p",[s._v("这块一直不是很了解。今天尝试自己模拟了一下服务器的nginx配置，终于明白了这个配置的含义。")]),s._v(" "),a("p",[s._v("当nginx的proxy_pass配置的是域名时，为了快速定位到域名的ip，需要增加一个resolver配置。")]),s._v(" "),a("p",[s._v("当resolver配置后，nginx会动态利用resolver设置的DNS服务器（本机设置的DNS服务器或/etc/hosts无效），将域名解析成IP，proxy模块会将请求转发到解析后的IP上。")]),s._v(" "),a("p",[s._v("一般我们去看/etc/resolve.conf就可以看见默认的dns解析配置。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://ipic-coda.oss-cn-beijing.aliyuncs.com/2019-12-31-073015.png",alt:"image-20191231153014650"}})]),s._v(" "),a("p",[s._v("附加：如何利用dnsmasq搭建一个本地的dns解析服务，实现前端hosts文件和请求接口需要的hosts文件动态解析的功能。")]),s._v(" "),a("p",[s._v("https://segmentfault.com/a/1190000020086790")]),s._v(" "),a("h2",{attrs:{id:"_5-文件过大413"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-文件过大413"}},[s._v("#")]),s._v(" 5: 文件过大413")]),s._v(" "),a("p",[s._v("客户端做了一个上传app包的功能，服务器上测试的时候报错了，因为nginx不允许传太大的文件。")]),s._v(" "),a("p",[s._v("打开nginx主配置文件nginx.conf，找到"),a("code",[s._v("http{}")]),s._v("段，添加"),a("code",[s._v("client_max_body_size 10M")]),s._v("；")]),s._v(" "),a("p",[s._v("client_max_body_size这个参数限制了上传文件的大小，默认是1M，我在上面的修改中给了10M的限制。")])])}),[],!1,null,null,null);t.default=r.exports}}]);