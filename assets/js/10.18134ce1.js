(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{369:function(t,s,a){"use strict";a.r(s);var e=a(25),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"了解kubernetes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#了解kubernetes"}},[t._v("#")]),t._v(" 了解kubernetes")]),t._v(" "),a("p",[t._v("https://kubernetes.io/zh/docs/concepts/")]),t._v(" "),a("h2",{attrs:{id:"基础概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基础概念"}},[t._v("#")]),t._v(" 基础概念")]),t._v(" "),a("p",[t._v("https://www.kubernetes.org.cn/6986.html?from=singlemessage&isappinstalled=0")]),t._v(" "),a("h3",{attrs:{id:"什么是容器编排系统？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是容器编排系统？"}},[t._v("#")]),t._v(" 什么是容器编排系统？")]),t._v(" "),a("p",[t._v("我们先反过来思考。假设我们有了一个编排系统，应该有哪些东西？")]),t._v(" "),a("p",[t._v("第一，这个系统，肯定有一些服务是用来运行这个编排系统的，剩下的服务，用来运行业务容器。")]),t._v(" "),a("p",[t._v("我们把运行编排系统的服务叫==master节点==，剩下的称为==worker节点==。")]),t._v(" "),a("ul",[a("li",[t._v("master节点负责管理服务器集群。")])]),t._v(" "),a("ol",[a("li",[t._v("==对外需要提供api接口，用来对接集群进行管理==。")]),t._v(" "),a("li",[t._v("对内，woker节点通过api接口要，定时上报运行状态，接收管理。")])]),t._v(" "),a("p",[t._v("master 上提供管理接口的组件称为 kube apiserver，对应的还需要两个用于和 api server 交互的客户端：")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("一个是提供给集群的运维管理员使用的，我们称为 ==kubectl==；")])]),t._v(" "),a("li",[a("p",[t._v("一个是提供给 worker 节点使用的，我们称为 ==kubelet==。")])])]),t._v(" "),a("p",[t._v("==master对worker的管理调度组件，都是通过 kube scheduler来进行。==")]),t._v(" "),a("p",[t._v("除此之外，master节点上，还应该有一个控制管理器，我们称之为kube-controller-manager，用来管理容器的运行状态。")]),t._v(" "),a("p",[t._v("然后，因为master一般也是分布式的，所以需要一个etcd进行分布式存储。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://ipic-coda.oss-cn-beijing.aliyuncs.com/2020-03-28-005400.png",alt:"architecture"}})]),t._v(" "),a("p",[t._v("综上我们可以知道，k8s大致包含有以下组件")]),t._v(" "),a("ul",[a("li",[t._v("Master 组件：kube-apiserver、kube-scheduler、etcd、kube-controller-manager；")]),t._v(" "),a("li",[t._v("Node 组件：kubelet、kube-proxy；")]),t._v(" "),a("li",[t._v("插件：DNS、用户界面 Web UI、容器资源监控、集群日志。")])]),t._v(" "),a("p",[t._v("他们的关系如下：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://ipic-coda.oss-cn-beijing.aliyuncs.com/2020-03-28-010707.png",alt:"4.png"}})]),t._v(" "),a("h3",{attrs:{id:"架构图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#架构图"}},[t._v("#")]),t._v(" 架构图")]),t._v(" "),a("p",[t._v("//todo")]),t._v(" "),a("h3",{attrs:{id:"kubernetes网络"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#kubernetes网络"}},[t._v("#")]),t._v(" Kubernetes网络")]),t._v(" "),a("h4",{attrs:{id:"pod网络"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pod网络"}},[t._v("#")]),t._v(" pod网络")]),t._v(" "),a("p",[t._v("集群内互通")]),t._v(" "),a("h4",{attrs:{id:"pod通讯"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pod通讯"}},[t._v("#")]),t._v(" Pod通讯")]),t._v(" "),a("h3",{attrs:{id:"scheduler-调度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scheduler-调度"}},[t._v("#")]),t._v(" Scheduler 调度")]),t._v(" "),a("h4",{attrs:{id:"preselect-预选规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#preselect-预选规则"}},[t._v("#")]),t._v(" preselect 预选规则")]),t._v(" "),a("p",[t._v("NodiskConflict")]),t._v(" "),a("p",[t._v("CheckNodeMemoryPressure")]),t._v(" "),a("p",[t._v("NodeSelector")]),t._v(" "),a("p",[t._v("FitResource")]),t._v(" "),a("p",[t._v("Affinity")]),t._v(" "),a("h4",{attrs:{id:"optimize-select-优选策略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#optimize-select-优选策略"}},[t._v("#")]),t._v(" Optimize-Select 优选策略")]),t._v(" "),a("p",[t._v("SelectorSpreadPriority")]),t._v(" "),a("p",[t._v("LeastRequestedPriority")]),t._v(" "),a("p",[t._v("AffinityPriority")]),t._v(" "),a("h3",{attrs:{id:"kubernetes服务发现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#kubernetes服务发现"}},[t._v("#")]),t._v(" Kubernetes服务发现")]),t._v(" "),a("p",[t._v("kube-proxy(clusterIP)")]),t._v(" "),a("p",[t._v("Kube-proxy(nodePort)")]),t._v(" "),a("p",[t._v("Kube-dns")]),t._v(" "),a("h1",{attrs:{id:"搭建kubernetes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#搭建kubernetes"}},[t._v("#")]),t._v(" 搭建kubernetes")]),t._v(" "),a("blockquote",[a("p",[t._v("选择正确的解决方案")])]),t._v(" "),a("p",[t._v("如果你只是想试一试Kubernetes，我们==推荐基于Docker的本地方案==。")]),t._v(" "),a("p",[t._v("基于Docker的本地方案是众多能够完成快速搭建的本地集群方案中的一种，但是局限于单台机器。")]),t._v(" "),a("p",[t._v("当你准备好扩展到多台机器和更高可用性时，托管解决方案是最容易搭建和维护的。")]),t._v(" "),a("p",[t._v("全套云端方案 只需要少数几个命令就可以在更多的云服务提供商搭建Kubernetes。")]),t._v(" "),a("p",[t._v("定制方案 需要花费更多的精力，但是覆盖了从零开始搭建Kubernetes集群的通用建议到分步骤的细节指引。")]),t._v(" "),a("h3",{attrs:{id:"_1-minikube"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-minikube"}},[t._v("#")]),t._v(" 1.minikube")]),t._v(" "),a("blockquote",[a("p",[t._v("https://github.com/kubernetes/minikube")])]),t._v(" "),a("p",[t._v("Minikube 是一种可以让您在本地轻松运行 Kubernetes 的工具。Minikube 在笔记本电脑上的虚拟机（VM）中运行单节点 Kubernetes 集群，供那些希望尝试 Kubernetes 或进行日常开发的用户使用。")]),t._v(" "),a("ul",[a("li",[t._v("首先需要在mac 安装"),a("a",{attrs:{href:"https://github.com/kubernetes/minikube",target:"_blank",rel:"noopener noreferrer"}},[t._v("minikube"),a("OutboundLink")],1)])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("brew "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" minikube\n")])])]),a("ul",[a("li",[t._v("然后安装"),a("a",{attrs:{href:"https://github.com/kubernetes/kubernetes",target:"_blank",rel:"noopener noreferrer"}},[t._v("kubectl"),a("OutboundLink")],1)])]),t._v(" "),a("p",[t._v("kubectl是本地的cli命令，可以检查集群资源；创建，删除和更新组件。")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v(" brew "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" kubectl\n")])])]),a("ul",[a("li",[t._v("启动minikube")])]),t._v(" "),a("p",[a("code",[t._v("minukube start")])]),t._v(" "),a("p",[t._v("不过上面的命令，国内安装基本上都会失败, ==所以需要用下面的带了更多参数的命令==")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("minikube start "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--vm-driver"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("virtualbox "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--image-mirror-country"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("cn "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--registry-mirror"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://alzgoonw.mirror.aliyuncs.com'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--image-repository"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'registry.cn-hangzhou.aliyuncs.com/google_containers'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n\n")])])]),a("ul",[a("li",[t._v("这个命令创建一个名为 "),a("code",[t._v("minikube")]),t._v(" 的 "),a("a",{attrs:{href:"https://kubernetes.io/docs/reference/generated/kubectl/kubectl-commands#-em-set-context-em-",target:"_blank",rel:"noopener noreferrer"}},[t._v("kubectl 上下文"),a("OutboundLink")],1),t._v("。 此上下文包含与 Minikube 集群通信的配置。")])]),t._v(" "),a("p",[t._v("==kubectl连k8s的控制台，需要指定context。==")]),t._v(" "),a("p",[t._v("Minikube 会自动将此上下文设置为默认值，也可以运行")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("kubectl config use-context minikube\n")])])]),a("ul",[a("li",[t._v("要访问 "),a("a",{attrs:{href:"https://kubernetes.io/docs/tasks/access-application-cluster/web-ui-dashboard/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Kubernetes Dashboard"),a("OutboundLink")],1),t._v("，请在启动 Minikube 后在 shell 中运行此命令以获取地址：")])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("minikube dashboard\n")])])]),a("p",[t._v("可以看到k8s的控制界面")]),t._v(" "),a("p",[t._v("http://127.0.0.1:59860/api/v1/namespaces/kubernetes-dashboard/services/http:kubernetes-dashboard:/proxy/#/overview?namespace=default")]),t._v(" "),a("ul",[a("li",[t._v("查看集群配置信息")])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("kubectl config view "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看kubeconfig的配置信息")]),t._v("\nkubectl cluster-info "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 看当前k8s集群的情况")]),t._v("\n")])])]),a("ul",[a("li",[t._v("minikube的远程连接")])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("minikube "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ssh")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 连接到一个kube上")]),t._v("\n")])])]),a("h3",{attrs:{id:"_2-aws服务集群"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-aws服务集群"}},[t._v("#")]),t._v(" 2.AWS服务集群")]),t._v(" "),a("p",[t._v("一般企业里会用到，购买服务后， 通过本地kube的配置文件"),a("code",[t._v("~/.kube")]),t._v("，进行远程连接。")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("kubectl config view "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示合并的 kubeconfig 配置。")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 同时使用多个 kubeconfig 文件。 并查看合并的配置")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("KUBECONFIG")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("~/.kube/config:~/.kube/kubconfig2\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 获取 e2e 用户的密码")]),t._v("\nkubectl config view -o "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("jsonpath")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'{.users[?(@.name == \"e2e\")].user.password}'")]),t._v("\n\nkubectl config current-context              "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 展示当前所处的上下文")]),t._v("\nkubectl config use-context my-cluster-name  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置默认的上下文为 my-cluster-name")]),t._v("\n")])])]),a("h1",{attrs:{id:"使用kubernetes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用kubernetes"}},[t._v("#")]),t._v(" 使用kubernetes")]),t._v(" "),a("h2",{attrs:{id:"操作命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#操作命令"}},[t._v("#")]),t._v(" 操作命令")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("➜ kubectl\nkubectl controls the Kubernetes cluster manager.\n\n Find "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("more")]),t._v(" information at: https://kubernetes.io/docs/reference/kubectl/overview/\n\nBasic Commands "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Beginner"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(":\n  create         Create a resource from a "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" or from stdin.\n  expose         使用 replication controller, service, deployment 或者 pod\n并暴露它作为一个 新的 Kubernetes Service\n  run            在集群中运行一个指定的镜像\n  "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v("            为 objects 设置一个指定的特征\n\nBasic Commands "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Intermediate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(":\n  explain        查看资源的文档\n  get            显示一个或更多 resources\n  edit           在服务器上编辑一个资源\n  delete         Delete resources by filenames, stdin, resources and names, or by resources and\nlabel selector\n\nDeploy Commands:\n  rollout        Manage the rollout of a resource\n  scale          Set a new size "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" a Deployment, ReplicaSet or Replication Controller\n  autoscale      自动调整一个 Deployment, ReplicaSet, 或者 ReplicationController\n的副本数量\n\nCluster Management Commands:\n  certificate    修改 certificate 资源.\n  cluster-info   显示集群信息\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("top")]),t._v("            Display Resource "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("CPU/Memory/Storage"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" usage.\n  cordon         标记 node 为 unschedulable\n  uncordon       标记 node 为 schedulable\n  drain          Drain node "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" preparation "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" maintenance\n  taint          更新一个或者多个 node 上的 taints\n\nTroubleshooting and Debugging Commands:\n  describe       显示一个指定 resource 或者 group 的 resources 详情\n  logs           输出容器在 pod 中的日志\n  attach         Attach 到一个运行中的 container\n  "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v("           在一个 container 中执行一个命令\n  port-forward   Forward one or "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("more")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("local")]),t._v(" ports to a pod\n  proxy          运行一个 proxy 到 Kubernetes API server\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v("             复制 files 和 directories 到 containers 和从容器中复制 files 和\ndirectories.\n  auth           Inspect authorization\n\nAdvanced Commands:\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v("           Diff live version against would-be applied version\n  apply          通过文件名或标准输入流"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("stdin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("对资源进行配置\n  patch          使用 strategic merge patch 更新一个资源的 field"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  replace        通过 filename 或者 stdin替换一个资源\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("wait")]),t._v("           Experimental: Wait "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" a specific condition on one or many resources.\n  convert        在不同的 API versions 转换配置文件\n  kustomize      Build a kustomization target from a directory or a remote url.\n\n\n")])])]),a("blockquote",[a("p",[t._v("Kubernetes  节点(node)：一个节点是一个运行Kubernetes中的主机。\nKubernetes  容器组：一个Pod对应于由若干容器组成的一个容器组，同个组内的容器共享一个存储卷(volume)。\nKubernetes  容器组生命周期：包含所有容器状态集合，包括容器组状态类型，容器组生命周期，事件，重启策略，以及replication controllers。\nKubernetes  Replication Controllers：主要负责指定数量的pod在同一时间一起运行。\nKubernetes  服务：一个Kubernetes服务是容器组逻辑的高级抽象，同时也对外提供访问容器组的策略。\nKubernetes  卷：一个卷就是一个目录，容器对其有访问权限。\nKubernetes  标签：标签是用来连接一组对象的，比如容器组。标签可以被用来组织和选择子对象。\nKubernetes  接口权限：端口，ip地址和代理的防火墙规则。\nKubernetes  web界面：用户可以通过web界面操作Kubernetes。\nKubernetes  命令行操作： kubecfg 命令。")])]),t._v(" "),a("h2",{attrs:{id:"node-节点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#node-节点"}},[t._v("#")]),t._v(" Node 节点")]),t._v(" "),a("p",[t._v("一个Node对应一个运行kubernete集群中的节点")]),t._v(" "),a("p",[t._v("查看当前context下的node")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("$ kubectl get node\n")])])]),a("p",[a("img",{attrs:{src:"https://ipic-coda.oss-cn-beijing.aliyuncs.com/2020-03-28-000045.png",alt:"image-20200328080044652"}})]),t._v(" "),a("h2",{attrs:{id:"pod-容器组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pod-容器组"}},[t._v("#")]),t._v(" POD 容器组")]),t._v(" "),a("p",[t._v("一个pod使用相同的docker容器并且共享volume")]),t._v(" "),a("p",[t._v("pod是k8s里最小的单位，它用来运行容器。")]),t._v(" "),a("p",[t._v("一般通过yml文件对pod进行创建、删除操作")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 通过pod.json文件中指定的资源类型和名称删除一个pod")]),t._v("\n$ kubectl create -f ./pod.yml\n$ kubectl delete -f ./pod.yml\n")])])]),a("h3",{attrs:{id:"查看pod的状态"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看pod的状态"}},[t._v("#")]),t._v(" 查看pod的状态")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("➜  ~ kubectl describe pod broker-api -n dev-margin\n")])])]),a("h3",{attrs:{id:"创建一个pod"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建一个pod"}},[t._v("#")]),t._v(" 创建一个pod")]),t._v(" "),a("p",[t._v("我们通过yml文件创建并且启动一个nginx pod")]),t._v(" "),a("p",[t._v("1.创建一个"),a("code",[t._v("pod-nginx.yml")])]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n")])])]),a("p",[t._v("2.验证pod创建成功")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("$ kubectl cversion "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#先确认kubectl连接上了")]),t._v("\n$ kubectl create -f pod-nginx.yml "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 根据yml文件创建pod")]),t._v("\n$ kubectl get pods -o wide "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看pod详细信息")]),t._v("\n")])])]),a("p",[a("img",{attrs:{src:"https://ipic-coda.oss-cn-beijing.aliyuncs.com/2020-03-27-121551.png",alt:"image-20200327201551379"}})]),t._v(" "),a("p",[t._v("3.如果需要进入一个pod里，运行 "),a("code",[t._v("--it")]),t._v("命令")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("$ kubectl "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" -it nginx "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sh")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 可以进入某一个pod的容器里")]),t._v("\n")])])]),a("h3",{attrs:{id:"为pod分配内存资源"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为pod分配内存资源"}},[t._v("#")]),t._v(" 为pod分配内存资源")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://kubernetes.io/zh/docs/tasks/configure-pod-container/assign-memory-resource/#%E8%B6%85%E8%BF%87%E5%AE%B9%E5%99%A8%E9%99%90%E5%88%B6%E7%9A%84%E5%86%85%E5%AD%98",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方文档"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"思考：如何让外界去访问这个pod的nginx服务？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#思考：如何让外界去访问这个pod的nginx服务？"}},[t._v("#")]),t._v(" "),a("strong",[t._v("思考：如何让外界去访问这个pod的nginx服务？")])]),t._v(" "),a("p",[t._v("方案1：可以将nginx服务映射到minikube机器的ip上")]),t._v(" "),a("p",[t._v("通过port-forward命令，将本地端口映射到pod端口上")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("Examples"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n  # Listen on ports "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5000")]),t._v(" and "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6000")]),t._v(" locally"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" forwarding data to"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" ports "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5000")]),t._v(" and "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" the pod\n  kubectl port"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("forward pod"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("mypod "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6000")]),t._v("\n\n  # Listen on ports "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5000")]),t._v(" and "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6000")]),t._v(" locally"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" forwarding data to"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" ports "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5000")]),t._v(" and "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" a pod selected by the\ndeployment\n  kubectl port"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("forward deployment"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("mydeployment "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6000")]),t._v("\n\n  # Listen on ports "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5000")]),t._v(" and "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6000")]),t._v(" locally"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" forwarding data to"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" ports "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5000")]),t._v(" and "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" a pod selected by the service\n  kubectl port"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("forward service"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("myservice "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6000")]),t._v("\n\n  # Listen on port "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8888")]),t._v(" locally"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" forwarding to "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" the pod\n  kubectl port"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("forward pod"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("mypod "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8888")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5000")]),t._v("\n\n  # Listen on port "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8888")]),t._v(" on all addresses"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" forwarding to "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" the pod\n  kubectl port"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("forward "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("address "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),t._v(" pod"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("mypod "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8888")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5000")]),t._v("\n\n  # Listen on port "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8888")]),t._v(" on localhost and selected "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("IP")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" forwarding to "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" the pod\n  kubectl port"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("forward "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("address localhost"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.19")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".21")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".23")]),t._v(" pod"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("mypod "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8888")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5000")]),t._v("\n\n  # Listen on a random port locally"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" forwarding to "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" the pod\n  kubectl port"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("forward pod"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("mypod "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5000")]),t._v("\n")])])]),a("h2",{attrs:{id:"resource"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#resource"}},[t._v("#")]),t._v(" Resource")]),t._v(" "),a("h3",{attrs:{id:"replicationcontroller"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#replicationcontroller"}},[t._v("#")]),t._v(" ReplicationController")]),t._v(" "),a("p",[t._v("ReplicationController 类似于进程管理器，但是 ReplicationController 不是监控单个节点上的单个进程，而是监控跨多个节点的多个 pod。")]),t._v(" "),a("h4",{attrs:{id:"yml格式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#yml格式"}},[t._v("#")]),t._v(" yml格式")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ReplicationController\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("replicas")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#指定同时运行多少个pod")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("selector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#标签选择器，管理所有与之匹配的pod")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("template")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#必须字段")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#必须和.spec.selector相同，否则被api拒绝。")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n")])])]),a("h4",{attrs:{id:"创建rc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建rc"}},[t._v("#")]),t._v(" 创建rc")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("kubectl create -f replication.yml\n")])])]),a("h4",{attrs:{id:"扩容缩容"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#扩容缩容"}},[t._v("#")]),t._v(" 扩容缩容")]),t._v(" "),a("p",[t._v("通过简单地更新 "),a("code",[t._v("replicas")]),t._v(" 字段，ReplicationController 可以方便地横向扩容或缩容副本的数量，或手动或通过自动缩放控制代理")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("kubectl scale --replicas"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" rc/nginx\n")])])]),a("p",[t._v("这样可以手动把nginx 缩放到1个pod")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://ipic-coda.oss-cn-beijing.aliyuncs.com/2020-03-29-015054.png",alt:"image-20200329095054336"}})]),t._v(" "),a("h4",{attrs:{id:"删除rc以及对应的pod"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除rc以及对应的pod"}},[t._v("#")]),t._v(" "),a("strong",[t._v("删除rc以及对应的pod")])]),t._v(" "),a("p",[t._v("要删除一个 ReplicationController 以及它的 Pod，使用 "),a("a",{attrs:{href:"https://kubernetes.io/docs/reference/generated/kubectl/kubectl-commands#delete",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("kubectl delete")]),a("OutboundLink")],1),t._v("。 kubectl 将 ReplicationController 缩放为 0 并等待以便在删除 ReplicationController 本身之前删除每个 Pod。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("kubectl delete -f replication.yml\n")])])]),a("p",[t._v("总结一下，步骤为：")]),t._v(" "),a("p",[t._v("1.缩放副本为 0、")]),t._v(" "),a("p",[t._v("2.等待 Pod 删除，之后删除 ReplicationController 资源")]),t._v(" "),a("h3",{attrs:{id:"replicaset"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#replicaset"}},[t._v("#")]),t._v(" ReplicaSet")]),t._v(" "),a("p",[t._v("ReplicaSet是replication controller的升级版。")]),t._v(" "),a("p",[t._v("*"),a("code",[t._v("Replication Controller")]),t._v("*只支持基于等式的selector（env=dev或environment!=qa），但ReplicaSet还支持基于集合的selector。比如：version in (v1.0, v2.0)或 env notin (dev, qa)")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" apps/v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ReplicaSet\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" frontend\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" guestbook\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tier")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" frontend\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("replicas")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("selector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matchLabels")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tier")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" frontend\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matchExpressions")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 表达式")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" tier"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("operator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" In"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("values")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("frontend"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("template")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" guestbook\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tier")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" frontend\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" php"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("redis\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" gcr.io/google_samples/gb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("frontend"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("v3\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n\n")])])]),a("p",[t._v("创建rs后，我们看一下rs的信息：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://ipic-coda.oss-cn-beijing.aliyuncs.com/2020-03-29-060644.png",alt:"image-20200329140643726"}})]),t._v(" "),a("h2",{attrs:{id:"deployment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#deployment"}},[t._v("#")]),t._v(" Deployment")]),t._v(" "),a("p",[t._v("提供一个声明式的更新")]),t._v(" "),a("p",[t._v("可以声明需要更新的版本")]),t._v(" "),a("h3",{attrs:{id:"创建管理deployment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建管理deployment"}},[t._v("#")]),t._v(" 创建管理deployment")]),t._v(" "),a("p",[t._v("1.定义一个yml文件")]),t._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" apps/v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Deployment\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("deployment\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("replicas")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("selector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 通过selector声明pods")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matchLabels")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("template")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n")])])]),a("p",[t._v("2.创建deployment")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("$ kubectl create -f ./deployment_nginx.yml\n")])])]),a("p",[t._v("3.查看deployment")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("$ kubectl get deployment -o wide\n")])])]),a("p",[a("img",{attrs:{src:"https://ipic-coda.oss-cn-beijing.aliyuncs.com/2020-03-27-233517.png",alt:"image-20200328073517412"}})]),t._v(" "),a("p",[t._v("4.查看replicaSet 和 pods")]),t._v(" "),a("p",[t._v("所以创建deployment的时候，也会创建rs资源。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://ipic-coda.oss-cn-beijing.aliyuncs.com/2020-03-27-233610.png",alt:"image-20200328073609314"}})]),t._v(" "),a("p",[t._v("5.通过deployment来更新image")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("$ kubectl "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" image deployment nginx-deployment "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("nginx")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("nginx:1.13\n")])])]),a("p",[t._v("等待一会儿，就可以看到，deployment被更新了")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://ipic-coda.oss-cn-beijing.aliyuncs.com/2020-03-27-234255.png",alt:"image-20200328074254196"}})]),t._v(" "),a("p",[t._v("6.如果需要回滚，或者查看历史。")]),t._v(" "),a("p",[t._v("通过rollout undo、rollout history来进行操作")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("$ kubectl rollout undo deployment nginx-deployment\n$ kubectl rollout "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("history")]),t._v(" deployment nginx-deployment\n")])])]),a("p",[a("img",{attrs:{src:"https://ipic-coda.oss-cn-beijing.aliyuncs.com/2020-03-27-234558.png",alt:"image-20200328074558262"}})]),t._v(" "),a("h2",{attrs:{id:"externalname"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#externalname"}},[t._v("#")]),t._v(" ExternalName")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("kubectl create svc externalname -n test-bhop prerender --external-name prerender.broker.svc.cluster.local\n")])])]),a("h2",{attrs:{id:"命名空间"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#命名空间"}},[t._v("#")]),t._v(" 命名空间")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("kubectl get namespace\n")])])]),a("h2",{attrs:{id:"services"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#services"}},[t._v("#")]),t._v(" Services")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("kubectl get services                          # 列出当前命名空间下的所有 services\n")])])]),a("p",[t._v("第一种方式：通过expose命令")]),t._v(" "),a("p",[t._v("将pod expose为一个service, 类型为NodePort")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("$ kubectl expose pods nginx-pod --type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("NodePort\n")])])]),a("p",[a("img",{attrs:{src:"https://ipic-coda.oss-cn-beijing.aliyuncs.com/2020-03-28-023332.png",alt:"image-20200328103332201"}})]),t._v(" "),a("p",[t._v("可以通过32685这个端口去访问pod的服务")]),t._v(" "),a("p",[t._v("第二种：通过yml文件去创建")]),t._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Service\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("service\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nodePort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("targetPort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 也可以指定pod的port name: 比如nginx-port")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("protocol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" TCP\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("selector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" NodePort\n")])])]),a("p",[a("img",{attrs:{src:"https://ipic-coda.oss-cn-beijing.aliyuncs.com/2020-03-28-023829.png",alt:"image-20200328103829227"}})]),t._v(" "),a("h2",{attrs:{id:"labels"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#labels"}},[t._v("#")]),t._v(" Labels")]),t._v(" "),a("p",[t._v("k8s里几乎所有资源都可以设置label，做个试验")]),t._v(" "),a("p",[t._v("先创建一个pods")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("apiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx-pod\n  labels:\n    app: nginx\nspec:\n  containers:\n  - name: nginx-pod\n    image: nginx\n    ports:\n    - containerPort: 80\n")])])]),a("p",[t._v("expose service")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://ipic-coda.oss-cn-beijing.aliyuncs.com/2020-03-28-012122.png",alt:"image-20200328092121258"}})]),t._v(" "),a("blockquote",[a("p",[t._v("--type=:   ClusterIP, NodePort, LoadBalancer, or ExternalName. Default is 'ClusterIP'.")])]),t._v(" "),a("p",[t._v("通过ip + 端口 可以访问")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://ipic-coda.oss-cn-beijing.aliyuncs.com/2020-03-28-012419.png",alt:"image-20200328092419233"}})]),t._v(" "),a("p",[t._v("显示node的labels")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ kubectl get node --show-labels\n")])])]),a("p",[t._v("设置node的labels")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("$ kubectl label node "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${node_name}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("key")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("value "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置node的label")]),t._v("\n")])])]),a("p",[t._v("显示pods的labels")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://ipic-coda.oss-cn-beijing.aliyuncs.com/2020-03-28-013043.png",alt:"image-20200328093042661"}})]),t._v(" "),a("h1",{attrs:{id:"其他待了解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他待了解"}},[t._v("#")]),t._v(" 其他待了解")]),t._v(" "),a("h2",{attrs:{id:"nginx-ingress-教程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nginx-ingress-教程"}},[t._v("#")]),t._v(" Nginx Ingress 教程")]),t._v(" "),a("h3",{attrs:{id:"ing的配置文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ing的配置文件"}},[t._v("#")]),t._v(" ing的配置文件")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Please edit the object below. Lines beginning with a '#' will be ignored,")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# and an empty file will abort the edit. If an error occurs while saving this file will be")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# reopened with the relevant failures.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" extensions/v1beta1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Ingress\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("annotations")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("alb.ingress.kubernetes.io/actions.ssl-redirect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" '"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v('"Type"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"redirect"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v('"RedirectConfig"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v('"Protocol"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"HTTPS"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v('"Port"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"443"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v('"StatusCode"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"HTTP_301"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("'\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("alb.ingress.kubernetes.io/certificate-arn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" arn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("aws"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("acm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("ap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("northeast"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("667164967571"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("certificate/83d8ae8f"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("1c13"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("405b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("a0ca"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("6d50f3d1cacf\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("alb.ingress.kubernetes.io/listen-ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'[{"HTTP": 80}, {"HTTPS": 443}]\'')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("alb.ingress.kubernetes.io/load-balancer-attributes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" routing.http2.enabled=true\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("alb.ingress.kubernetes.io/scheme")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" internal\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("alb.ingress.kubernetes.io/security-groups")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" sg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("06482acc94d50f475\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("alb.ingress.kubernetes.io/subnets")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" subnet"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("0c204e2d858a90fea"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("subnet"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("05c4eed2a1a5a94ea\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("alb.ingress.kubernetes.io/success-codes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 200"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("404")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("alb.ingress.kubernetes.io/target-type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ip\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kubernetes.io/ingress.class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" alb\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Please edit the object below. Lines beginning with a '#' will be ignored,")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# and an empty file will abort the edit. If an error occurs while saving this file will be")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# reopened with the relevant failures.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" extensions/v1beta1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Ingress\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("annotations")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("alb.ingress.kubernetes.io/actions.ssl-redirect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" '"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v('"Type"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"redirect"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v('"RedirectConfig"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v('"Protocol"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"HTTPS"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v('"Port"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"443"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v('"StatusCode"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"HTTP_301"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("'\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("alb.ingress.kubernetes.io/certificate-arn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" arn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("aws"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("acm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("ap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("northeast"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("667164967571"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("certificate/83d8ae8f"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("1c13"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("405b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("a0ca"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("6d50f3d1cacf\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("alb.ingress.kubernetes.io/listen-ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'[{"HTTP": 80}, {"HTTPS": 443}]\'')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("alb.ingress.kubernetes.io/load-balancer-attributes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" routing.http2.enabled=true\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("alb.ingress.kubernetes.io/scheme")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" internal\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("alb.ingress.kubernetes.io/security-groups")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" sg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("06482acc94d50f475\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("alb.ingress.kubernetes.io/subnets")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" subnet"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("0c204e2d858a90fea"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("subnet"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("05c4eed2a1a5a94ea\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("alb.ingress.kubernetes.io/success-codes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 200"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("404")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("alb.ingress.kubernetes.io/target-type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ip\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kubernetes.io/ingress.class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" alb\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("creationTimestamp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2020-06-10T07:11:48Z"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("generation")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" www"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("bhex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("us\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("margin\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("resourceVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"89033678"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("selfLink")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /apis/extensions/v1beta1/namespaces/test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("margin/ingresses/www"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("bhex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("us\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uid")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" a638d960"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("aae9"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("11ea"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("9c16"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("06b6d63a90fc\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rules")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("host")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("margin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("www.bhex.us\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("http")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("paths")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("-backend")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      \t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("serviceName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" activity"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("web\n        \t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("servicePort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /activity/*\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("backend")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("serviceName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" exchange"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("h5\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("servicePort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /m/*\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("backend")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("serviceName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" quote"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("server\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("servicePort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7124")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /api/quote/*\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("backend")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("serviceName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" broker"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("api\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("servicePort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7120")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /api/*\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("status")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("loadBalance")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"查看目前的ingress服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看目前的ingress服务"}},[t._v("#")]),t._v(" 查看目前的ingress服务")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("➜  ~ kubectl get ingress -n test-margin // -n 可以指定namespace\n")])])]),a("h3",{attrs:{id:"查看ingress的配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看ingress的配置"}},[t._v("#")]),t._v(" 查看ingress的配置")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("➜ kubectl get ing -n test-margin // 获取ingress的配置\n➜ kubectl edit ing www-bhex-us -n test-margin // 修改ingress的配置\n")])])]),a("h1",{attrs:{id:"备忘录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#备忘录"}},[t._v("#")]),t._v(" 备忘录")]),t._v(" "),a("h2",{attrs:{id:"常用命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用命令"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://kubernetes.io/zh/docs/reference/kubectl/cheatsheet/#%E4%B8%8E%E8%BF%90%E8%A1%8C%E4%B8%AD%E7%9A%84-pods-%E8%BF%9B%E8%A1%8C%E4%BA%A4%E4%BA%92",target:"_blank",rel:"noopener noreferrer"}},[t._v("常用命令"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"查看网页界面"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看网页界面"}},[t._v("#")]),t._v(" 查看网页界面")]),t._v(" "),a("p",[t._v("需要先本地启动一个命令行代理，可以使用 kubectl 命令行工具来启动")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("kubectl proxy\n")])])]),a("p",[t._v("启动成功后可以让本地通过"),a("a",{attrs:{href:"http://localhost:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/",target:"_blank",rel:"noopener noreferrer"}},[t._v("这个地址"),a("OutboundLink")],1),t._v("来访问")]),t._v(" "),a("p",[t._v("如果命名空间错误的话，查看一下k8s上面的dashboard的服务名称，然后替换掉。")]),t._v(" "),a("p",[t._v("比如这个kube-system名字不对，那就去查看一下pods的名称")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://ipic-coda.oss-cn-beijing.aliyuncs.com/2020-04-23-091043.png",alt:"image-20200423171043037"}})]),t._v(" "),a("p",[t._v("查看命令：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://ipic-coda.oss-cn-beijing.aliyuncs.com/2020-06-16-023402.png",alt:"image-20200616103401302"}})]),t._v(" "),a("p",[t._v("替换后的dashboard地址是：http://localhost:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/")]),t._v(" "),a("h2",{attrs:{id:"切换k8s的上下文"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#切换k8s的上下文"}},[t._v("#")]),t._v(" 切换k8s的上下文")]),t._v(" "),a("p",[t._v("如果有多个k8s环境可以连接的话，可以通过切换context的方式，来指定连接到某个context上。")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("$ kubectl config current-context  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 展示当前所处的上下文")]),t._v("\n$ kubectl config get-contexts "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示一个或多个contexts")]),t._v("\n$ kubectl config use-context "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 切换上下文")]),t._v("\n")])])]),a("p",[a("img",{attrs:{src:"https://ipic-coda.oss-cn-beijing.aliyuncs.com/2020-03-27-235902.png",alt:"image-20200328075902219"}})]),t._v(" "),a("h2",{attrs:{id:"查看k8s上的namespace"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看k8s上的namespace"}},[t._v("#")]),t._v(" 查看k8s上的namespace")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("kubectl get namespace\n")])])]),a("img",{staticStyle:{zoom:"43%"},attrs:{src:"https://ipic-coda.oss-cn-beijing.aliyuncs.com/2020-06-16-031907.png",alt:"image-20200616111906986"}}),t._v(" "),a("h2",{attrs:{id:"查看服务上的日志"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看服务上的日志"}},[t._v("#")]),t._v(" 查看服务上的日志")]),t._v(" "),a("p",[t._v("查看日志有两种方式。")]),t._v(" "),a("h3",{attrs:{id:"第一种方式：通过dashboard-ui来查看"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第一种方式：通过dashboard-ui来查看"}},[t._v("#")]),t._v(" 第一种方式：通过dashboard ui来查看")]),t._v(" "),a("p",[t._v("Step1 选择namespace")]),t._v(" "),a("img",{staticStyle:{zoom:"35%"},attrs:{src:"https://ipic-coda.oss-cn-beijing.aliyuncs.com/2020-06-16-025140.png",alt:"image-20200616105140465"}}),t._v(" "),a("p",[t._v("Step2 选择pods")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://ipic-coda.oss-cn-beijing.aliyuncs.com/2020-06-16-025224.png",alt:"image-20200616105224187"}})]),t._v(" "),a("p",[t._v("Step3 点击查看日志")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://ipic-coda.oss-cn-beijing.aliyuncs.com/2020-06-16-030029.png",alt:"image-20200616110029315"}})]),t._v(" "),a("h3",{attrs:{id:"第二种方式：进入查看"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第二种方式：进入查看"}},[t._v("#")]),t._v(" 第二种方式：进入查看")]),t._v(" "),a("p",[t._v("Step1. 选择context(参考切换上下文)")]),t._v(" "),a("p",[t._v("Step2. 选择好namespace")]),t._v(" "),a("p",[t._v("Step3. 获取pods名称")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://ipic-coda.oss-cn-beijing.aliyuncs.com/2020-06-16-032034.png",alt:"image-20200616112033993"}})]),t._v(" "),a("p",[t._v("Step4. 进入pods里面")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://ipic-coda.oss-cn-beijing.aliyuncs.com/2020-06-16-032509.png",alt:"image-20200616112508807"}})]),t._v(" "),a("h3",{attrs:{id:"第三种方式：通过logs命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第三种方式：通过logs命令"}},[t._v("#")]),t._v(" 第三种方式：通过logs命令")]),t._v(" "),a("p",[t._v("如果pods的状态不正常，无法直接通过exec -it进入pod里面，就可以直接使用kubectl logs的命令。")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("kubectl logs pod\n")])])]),a("p",[a("img",{attrs:{src:"/Users/keyang/notes/docs/DevOps/image-20200628120435457.png",alt:"image-20200628120435457"}})]),t._v(" "),a("h3",{attrs:{id:"第四种方式：describe-pod-查看-events"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第四种方式：describe-pod-查看-events"}},[t._v("#")]),t._v(" 第四种方式：describe pod 查看 events")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("kubectl describe pod exchange-h5-67586ffc48-vj4td -n cloud\n")])])]),a("p",[a("img",{attrs:{src:"/Users/keyang/notes/docs/DevOps/image-20200628150320225.png",alt:"image-20200628150320225"}})])])}),[],!1,null,null,null);s.default=n.exports}}]);